<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>logTemplate</title>
      <link href="2021/01/21/logTemplate/"/>
      <url>2021/01/21/logTemplate/</url>
      
        <content type="html"><![CDATA[<h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><hr><h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><hr><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><hr><h1 id="Building…"><a href="#Building…" class="headerlink" title="Building…"></a>Building…</h1><hr>]]></content>
      
      
      <categories>
          
          <category> 日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0121 站點日誌</title>
      <link href="2021/01/21/0121_0/"/>
      <url>2021/01/21/0121_0/</url>
      
        <content type="html"><![CDATA[<h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><ul><li>已啟用 <a href="https://github.com/yyyyyyounger/yyyyyyounger.github.io/blob/hexo/.github/ISSUE_TEMPLATE/comment.md">GitHub Issue Template</a> ！</li><li>站點重大更新！主題由 <code>yun</code> 更改為 <a href="https://github.com/removeif/hexo-theme-amazing">amazing</a> ！</li></ul><hr><h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><ul><li>頁腳的 <code>留言</code> 功能沒有配置正確指向（無響應</li></ul><hr><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><ul><li>GitHub Discussions 的404 Page 已解決</li></ul><hr><h1 id="Building…"><a href="#Building…" class="headerlink" title="Building…"></a>Building…</h1><ul><li>修改看板娘樣式</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript學習筆記</title>
      <link href="2021/01/20/0120_JavaScript/"/>
      <url>2021/01/20/0120_JavaScript/</url>
      
        <content type="html"><![CDATA[<p>學習JavaScript的歷程及我覺得的重點</p><hr><a id="more"></a><h1 id="初探JavaScript"><a href="#初探JavaScript" class="headerlink" title="初探JavaScript"></a>初探JavaScript</h1><ul><li>2021-1-20，吃晚飯的時候測試剛搭好不久的Blog，但想到很多自定義的東西又要放入 <code>head</code> 啊，寫script又要在什麼什麼結構上寫啊，各種很朦朧的概念東西，就渾身不舒服。很想自己用上自己寫的功能，於是開啟了學習JavaScript之路~ 😁<br>這個時候我看的是 <a href="https://www.liaoxuefeng.com/wiki/1022910821149312">廖雪峰的JavaScript教程</a> ，一開始是邊吃飯邊隨便看看的，但發現寫的很容易理解，而且廖大神這個網站做得簡直逆天啊直接run調試窗口，第一次見到的我也是目瞪口呆，果斷收藏。👍</li></ul><h1 id="語法筆記"><a href="#語法筆記" class="headerlink" title="語法筆記"></a>語法筆記</h1><h2 id="基本數據表示、判斷"><a href="#基本數據表示、判斷" class="headerlink" title="基本數據表示、判斷"></a>基本數據表示、判斷</h2><h3 id="變量"><a href="#變量" class="headerlink" title="變量"></a>變量</h3><p>变量名是大小写英文、数字、<code>$</code>和<code>_</code>的组合，且不能以数字开头.</p><pre><code>var a; //申明了变量a，此时a的值为undefinedvar $b = 1; // 申明了变量$b，同时给$b赋值，此时$b的值为1var t = null; // t的值是null</code></pre><p>可以發現特點是不用再去在意數據類型了TAT..</p><h4 id="Notice：賦值"><a href="#Notice：賦值" class="headerlink" title="Notice：賦值"></a>Notice：賦值</h4><p>JavaScript是動態語言。</p><blockquote><p>使用等号=对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意<strong>只能用var申明一次</strong>，例如：</p><p>var a = 123; // a的值是整数123<br>a = ‘ABC’; // a变为字符串</p></blockquote><h3 id="注釋"><a href="#注釋" class="headerlink" title="注釋"></a>注釋</h3><p>與C一樣用 <code>//</code> 單行注釋，用 <code>/*...*/</code> 區塊注釋。</p><h3 id="數學-數字-Number"><a href="#數學-數字-Number" class="headerlink" title="數學/數字/Number"></a>數學/數字/Number</h3><p>JavaScript不區分 <strong>整數</strong> 和 <strong>浮點數</strong> 。(羌胡~ 起飛~ ✈)</p><blockquote><p>NaN; // NaN表示<strong>Not a Number</strong>，当无法计算结果时用NaN表示<br>Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</p></blockquote><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><blockquote><p>字符串是以单引号’或双引号”括起来的任意文本，比如’abc’，”xyz”等等。请注意，’’或””本身只是一种表示方式，不是字符串的一部分，因此，字符串’abc’只有a，b，c这3个字符。</p></blockquote><h3 id="布爾-比較-bool-boolean-compare"><a href="#布爾-比較-bool-boolean-compare" class="headerlink" title="布爾/比較/bool/boolean/compare"></a>布爾/比較/bool/boolean/compare</h3><pre><code>&amp;&amp; = and|| = or! = not</code></pre><p>與C一樣， <code>=, &lt;=, &gt;=, ==</code><br>JavaScript有 <code>===</code> 比較</p><blockquote><p>==比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；</p><p>===比较，它不会自动转换数据类型，如果数据类型不一致，返回false，如果一致，再比较。</p><p>由于JavaScript这个设计缺陷，不要使用 == 比较，始终坚持使用===比较。</p></blockquote><blockquote><p>NaN 与所有其他值都不相等，包括它自己：<br>NaN === NaN; // false</p></blockquote><p>只能用 <strong>isNaN()函數</strong> 判斷是否為 NaN</p><pre><code>isNaN(NaN); // true</code></pre><h4 id="Notice-浮點數的相等比較"><a href="#Notice-浮點數的相等比較" class="headerlink" title="Notice: 浮點數的相等比較"></a>Notice: 浮點數的相等比較</h4><blockquote><p>1 / 3 === (1 - 2 / 3); // false<br>浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：</p><p>Math.abs(1 / 3 - (1 - 2 / 3)) &lt; 0.0000001; // true</p></blockquote><h3 id="空和未定義-null-and-undefined"><a href="#空和未定義-null-and-undefined" class="headerlink" title="空和未定義/null and undefined"></a>空和未定義/null and undefined</h3><blockquote><p>null表示一个“空”的值，0是一个数值，’’表示长度为0的字符串。</p><p><strong>大多数情况下，我们都应该用null</strong>。undefined仅仅在判断函数参数是否传递的情况下有用。</p></blockquote><h3 id="對象"><a href="#對象" class="headerlink" title="對象"></a>對象</h3><p><del>好耶有對象了！</del></p><blockquote><p>JavaScript的对象是一组由 <strong>键&amp;值</strong> 组成的无序集合，例如：</p></blockquote><pre><code>var person = &#123;    name: &#39;Bob&#39;,    age: 20,    tags: [&#39;js&#39;, &#39;web&#39;, &#39;mobile&#39;],    city: &#39;Beijing&#39;,    hasCar: true,    zipcode: null&#125;;</code></pre><blockquote><p>JavaScript对象的键都是字符串类型，值可以是任意数据类型。上述person对象一共定义了6个<strong>键值对</strong>，其中每个键又称为<strong>对象的属性</strong>，例如，person的name属性为’Bob’，zipcode属性为null。</p><p>用 <code>对象变量.属性名</code> 的方式获取一个对象的属性：</p></blockquote><pre><code>person.name; // &#39;Bob&#39;person.zipcode; // null</code></pre><h2 id="控制台操作-console"><a href="#控制台操作-console" class="headerlink" title="控制台操作/console"></a>控制台操作/console</h2><hr><p>太晚了改天寫..開學了…早8人早八魂 QAQ</p>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0120 站點日誌</title>
      <link href="2021/01/20/0120_0/"/>
      <url>2021/01/20/0120_0/</url>
      
        <content type="html"><![CDATA[<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><ul><li><p>對 <code>yun.yml</code> 配置 <code>GitHub Issue</code> 功能。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_issues:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">yyyyyyounger</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">yyyyyyounger.github.io</span></span><br><span class="line">  <span class="attr">filters:</span> <span class="string">is:issue</span>   <span class="comment">#filter為 GitHub Issue 搜索規則</span></span><br></pre></td></tr></table></figure></li><li><p>配置 <code>GitHub Discussions</code> 功能</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_discussions:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">yyyyyyounger</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">yyyyyyounger.github.io</span></span><br></pre></td></tr></table></figure><h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1></li><li><p><del>Hexo標籤的404 Page又出現了…其他標籤都正常</del></p><ul><li>2021-1-20 20:48:57更新：又deploy之後它又正常了,,,我也拿它沒辦法了 😭</li></ul></li><li><p>2021-1-20 23:52:27發現致命bug：代碼高亮沒了 我人傻了…</p><ul><li>可是這追溯原理不是Markdown出錯了嗎，或者我寫錯了，改天排查吧…</li><li>2021-1-21 08:18:13，這個太難整了啊，已經開始考慮回退版本了，網上有人說hexo更新後也會出bug</li></ul></li></ul><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><ul><li>將原GitHub評論&amp;討論跳轉的 <code>云游君</code> 界面更改為 <code>yyyyyyounger.github.io</code></li></ul><h1 id="處理中…"><a href="#處理中…" class="headerlink" title="處理中…"></a>處理中…</h1><ul><li>GitHub Issue 的模板</li><li>解决 GitHub Discussions 的404 Page</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0119 站點日誌</title>
      <link href="2021/01/19/0119_0/"/>
      <url>2021/01/19/0119_0/</url>
      
        <content type="html"><![CDATA[<p>&emsp;以後如果對網站有操作更新的話應該都會有這麼一篇日誌解釋一下，一般是給自己看的，大家有興趣也可以偷窺下~ 😁</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>1、對目錄 <code>about/site.md</code> (<a href="https://yyyyyyounger.github.io/about/site.html">關於本站</a>)寫了比較多的更新，希望該站點的介紹更豐富啦！</p><p>2、更新了2021/01/19的<a href="https://yyyyyyounger.github.io/2021/01/19/0119_1/">文章</a></p><p>3、規定 _posts 目錄下的命名方式：</p><pre><code>mmdd_xmmdd 規定為mmdd天的post_x 規定該天第 x 條post，範圍为 1~正無窮_0 預留為該天的log</code></pre><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><p>今天更新 <code>update.sh</code> 把</p><pre><code>hexo ghexo d</code></pre><p>改為了</p><pre><code>hexo g -d</code></pre><p>突然！<strong>標籤的404bug</strong>消除了！</p><p>現在可以正常點tags看相同tags的文章了~</p>]]></content>
      
      
      <categories>
          
          <category> 日誌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米手環門禁卡模擬、今天發現超好用的VSCode Markdown插件</title>
      <link href="2021/01/19/0119_1/"/>
      <url>2021/01/19/0119_1/</url>
      
        <content type="html"><![CDATA[<p>PN532讀卡器+小米手環NFC破解加密門禁實現模擬；VSCode Mardown輔助插件。</p><a id="more"></a><h2 id="小米手環-門卡模擬"><a href="#小米手環-門卡模擬" class="headerlink" title="小米手環 - 門卡模擬"></a>小米手環 - 門卡模擬</h2><p>&emsp;自從阿爺阿麻(爺爺奶奶)換了新手機之後，由於不是 <a href="https://baike.baidu.com/item/OLED/1328114?fr=aladdin">OLED</a> 屏幕，不能做到息屏顯示時間(阿爺上一部三星手機一直有的功能，他很喜歡)。<br>&emsp;所以20年某一次回鄉的時候就買了兩副 <em>小米手環5 NFC版</em> 給兩位老人家。<br>&emsp;這樣一來有了手環的便攜看時間和NFC功能，除了能滿足阿爺看時間的需求，還能順便給他們做個模擬門禁卡，而且續航很猛，不用再帶門禁卡出入小區了，nice！<br>&emsp;構思很爽，但沒想到我住處的地方卡是有加密的(淦)，阿爺阿麻另一個住處的門禁可以用，那就只好爽一半了，他們也挺開心的，拿到新玩意。<br><br/></p><p>為了將搞機進行到底，有困難那就征服它！</p><h3 id="準備工作-amp-過程"><a href="#準備工作-amp-過程" class="headerlink" title="準備工作&amp;過程"></a>準備工作&amp;過程</h3><ul><li>小米手環 NFC版 (廢話(理論應該是任何版本吧)</li><li>PN532讀卡器</li><li>空白UID卡</li><li>MifareOne Tool</li></ul><p>其實性質還是搬運，因為看的又是別人的教程哈哈：<br><a href="https://post.m.smzdm.com/p/awx00qvk/">PN532讀卡器在小米手環5上添加加密門禁卡</a> </p><p>不過這裡說幾個照著以上教程實操後仍需要注意的問題，避免踩坑~</p><hr><h4 id="實測"><a href="#實測" class="headerlink" title="實測"></a>實測</h4><ol><li>按照教程內購買的PN532套餐贈送的<strong>空白卡和藍色圓卡</strong>，在實測中藍色圓卡在 <code>MifareOne Tool</code> 軟件的 <strong><code>高級操作模式/UID写号</code></strong> 操作中會更順利，而白卡在該操作中出現了 <strong><code>可能失敗或無響應的提示</code></strong> ，所以大家可以直接使用圓卡進行扇區0的信息寫入。<ul><li>原理好像是空白卡和圓卡的類型是不同的，一個是UID一個是…我沒有深究，或許是一個方向，各位可以往下想想。</li></ul></li><li>把頭8位的16進制數字寫入空白卡之後，<strong>手環端</strong>進行的操作是直接 <strong><code>模擬門卡</code></strong> 而不是 <code>模擬空白卡</code> ，原因在下一個分割線說明。</li></ol><hr><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>&emsp;原理方面上面link的教程其實有提到，但也到實測的最後才明白他的意思。下面說說我自己的見解：</p><ol><li>讀卡器讀取 <code>需破解門禁卡</code> (以下簡稱原門禁)的數據，並把破譯的數據存放在一個 <code>.dump</code> 文件中。其中包含n個扇區的資料(也就是原門禁內的身份id)。</li><li>通過hex編輯器記錄前8個bit的16進制(HEX)數據(相當於一個區塊)。</li><li>把 <code>2.</code> 中的數據存入空白卡<ul><li>手環端模擬完 空白卡 再進行 <code>UID写号</code> 操作不能一次寫入 <code>64</code> 個區塊</li><li>於是用 <code>空白卡</code> 模擬出的數據直接刷入手環，再進行 <code>UID写号</code> 操作</li></ul></li><li>手環端選擇 <code>門禁模擬/模擬非加密門禁卡</code> 而非 <code>模擬空白卡</code><ul><li>此時實際寫入的是最終模擬卡 <strong>1/64</strong> 的區塊</li></ul></li><li>最後用 <code>UID写号</code> 把 <code>1.</code> 提取的 <code>.dump</code> 文件(剩下 63/64 的數據區塊)寫入 <code>4.</code> 中的模擬卡，成功！</li></ol><h2 id="VSCode-中的-Markdown-插件"><a href="#VSCode-中的-Markdown-插件" class="headerlink" title="VSCode 中的 Markdown 插件"></a>VSCode 中的 Markdown 插件</h2><p>在 VSCode的 <code>Extensions</code> (側邊豎欄)中直接搜索 <code>Markdown</code> 即可看到若干插件。<br>其中最值得用的：</p><ul><li>Markdown All in<ul><li>這個插件好像什麼功能都有了，甚至包括preview預覽功能？</li><li>甚至還有許多語法的快捷鍵？</li></ul></li><li>Markdown Preview Enhanced<ul><li>這個是專用的在VSCode中打Markdown，旁邊顯示預覽的插件</li><li>快捷鍵是 <code>Ctrl+K, 再按V</code></li></ul></li><li>markdownlint<ul><li>好像是用於檢測 Markdown 語法</li><li>還有糾錯功能(但是給多我兩條黃色警告線，強迫症的我整個人更不好了)<br/></li></ul></li></ul><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>&emsp;晚些時候要是有機會再操作一次門禁破解&amp;模擬，就上一些自己的配圖和整理成獨立的一篇blog吧！<br>&emsp;Markdown插件方面的配圖也是，，，遲啲如果摸索到更多的插件用法再更新本條blog吧哈哈哈。。。😁</p>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> VS Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基坤生日快樂！</title>
      <link href="2021/01/18/0118_2/"/>
      <url>2021/01/18/0118_2/</url>
      
        <content type="html"><![CDATA[<p>趕上24點的尾巴</p><p>2021-01-18, 基坤生日快樂！！！<br>快樂~<br>快樂~~<br>快樂~~~</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="function"><span class="title">Happy</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">do</span>.superHappy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="title">loop</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        Happy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2436887836,3161249587&fm=26&gp=0.jpg" alt="happyBirthday.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 雜項 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo里的寫作 —— Markdown 語法</title>
      <link href="2021/01/18/0118_1Markdown/"/>
      <url>2021/01/18/0118_1Markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>md 是 Markdown 的後綴名。<br>再搬運一下 <a href="https://github.com/younghz/Markdown">云游君對Markdown的補充說明</a></p><p>本來想摘錄一些覺得有用的，但看著看著好像都挺有用..這條blog就當是本地備份吧~</p><h2 id="Markdown的世界"><a href="#Markdown的世界" class="headerlink" title="Markdown的世界"></a>Markdown的世界</h2><h3 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h3><p>使用=和-標記一級和二級標題<br>用n個 <code>#</code> 表示第n級標題 <code>(n∈1~6)</code><br>例如：</p><pre><code># 一級標題## 二級標題### 三級標題#### 四級標題##### 五級標題###### 六級標題</code></pre><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。<br><br/></p><h3 id="區塊引用"><a href="#區塊引用" class="headerlink" title="區塊引用"></a>區塊引用</h3><p>在段落的每行或者只在第一行使用符号 <code>&gt;</code> ,还可使用多个嵌套引用，如：</p><pre><code>&gt; 区块引用&gt;&gt; 嵌套引用&gt;&gt; 若&gt;數相同 則會引用在同一級</code></pre><p>Test:</p><blockquote><p>一個箭頭</p><blockquote><p>引用test<br>兩個箭頭會怎麼樣？</p><blockquote><p>三個箭頭會怎麼樣？</p></blockquote></blockquote></blockquote><br/><h4 id="代碼引用"><a href="#代碼引用" class="headerlink" title="代碼引用"></a>代碼引用</h4><p>使用 <code>```</code> 上括下括</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="function"><span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//空4個空格或者一個製表符</span></span><br><span class="line">    <span class="comment">//和普通段落之間存在空行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="強調"><a href="#強調" class="headerlink" title="強調"></a>強調</h3><p>在强调内容两侧分别加上*或者_，如：</p><pre><code>*斜体*, _斜体_**粗体**, __粗体__==強調黃色highlight==</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="無序列表"><a href="#無序列表" class="headerlink" title="無序列表"></a>無序列表</h4><p>使用<code>*</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p><pre><code># -（+or*） 第一项 -（+or*） 第二项 - （+or*）第三项</code></pre><p>注意：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。不然會默認把下一行(沒有空行)的語句加入標記內。</p><pre><code>- 無序- 無序-無序</code></pre><p>結果為</p><ul><li><p>無序 </p></li><li><p>無序</p></li><li><p>無序</p><ul><li><p>無序</p></li><li><p>無序</p></li><li><p>無序</p></li></ul></li></ul><p>結果為</p><ul><li>無序 </li><li>無序</li></ul><p>-無序</p><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>有序列表的标记方式是将上述的符号换成数字,并辅以.，如：</p><pre><code>1 . 第一项2 . 第二项3 . 第三项</code></pre><p>效果：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h3 id="分割線"><a href="#分割線" class="headerlink" title="分割線"></a>分割線</h3><p>使用三個或以上的 <code>*</code>，還可以使用 <code>-</code> 和 <code>_</code></p><hr><h3 id="鏈接"><a href="#鏈接" class="headerlink" title="鏈接"></a><em>鏈接</em></h3><p>链接可以由两种形式生成：行内式和参考式。<br>行內式：<br><a href="https://github.com/yyyyyyounger/yyyyyyounger.github.io/tree/hexo">yyyyyyounger的GitHub頁</a></p><p>參考式：</p><pre><code>[yyyyyyounger的GitHub頁1][1][yyyyyyounger的GitHub頁2][2][1]:https://github.com/yyyyyyounger/yyyyyyounger.github.io/tree/hexo[2]:https://github.com/yyyyyyounger/yyyyyyounger.github.io/tree/hexo</code></pre><p>參考式的寫法有點bug，我還是以後再更新吧。。。</p><h3 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a><em>圖片</em></h3><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个！。</p><h3 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠\"></a>反斜杠\</h3><p>相当于反转义作用。使符号成为普通符号。</p><h3 id="符号’-’"><a href="#符号’-’" class="headerlink" title="符号’`’"></a><em>符号’`’</em></h3><p>起到标记作用。如：</p><pre><code>\`ctrl+a\`</code></pre><p>顯示：<code>ctrl+a</code></p><h3 id="空格與換行"><a href="#空格與換行" class="headerlink" title="空格與換行"></a>空格與換行</h3><p>使用</p><pre><code>&amp;nbsp;or&lt;br/&gt;</code></pre><p>即可換行</p><p><code>&amp;emsp;</code> 則為空格, <br/><br>&emsp;效果</p><h3 id="刪除線"><a href="#刪除線" class="headerlink" title="刪除線"></a><del>刪除線</del></h3><p>使用兩個 <code>~~</code> 括住需要碼上刪除線的語句。例如：</p><pre><code>~~刪除我吧~~</code></pre><p>效果：<br><del>刪除我吧</del></p>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>繼續探索Hexo</title>
      <link href="2021/01/18/0118_0/"/>
      <url>2021/01/18/0118_0/</url>
      
        <content type="html"><![CDATA[<p>Hexo站點簡略配置方法及開始VS Code Terminal腳本調試</p><a id="more"></a><p>今天又搗鼓了很久，下午突發奇想 要在家裡的台式上對博客繼續進行更新維護，於是便有了下文。</p><h2 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h2><p>跟初用筆記本的時候一樣，照著大佬<a href="https://cloud.tencent.com/developer/article/1609701">云游君</a>先進行一些準備工作：</p><p>1、安裝好 <a href="https://nodejs.org/zh-cn/">Node.js</a><br>2、安裝 <a href="https://code.visualstudio.com/">VSCode</a><br>3、安裝 <a href="https://git-scm.com/">Git</a><br>4、通過命令行安裝 <a href="https://hexo.io/zh-cn/docs/index.html">Hexo</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>….此處先省略各種通過Git的<code>push download pull</code>的操作</p><p>當使用VS Code的 <code>Terminal</code> 總會出現不允許運行腳本的提示，這時候需要 <code>Win+X</code> 選用 <code>PowerShell</code> 管理員模式進行以下代碼的配置：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><p>詢問是否更改策略組的時候選是 <code>Y</code></p><p>然後就可以愉快地在VS Code Terminal敲指令啦！😁</p>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World ! 我的第一篇Blog！</title>
      <link href="2021/01/17/hello-world/"/>
      <url>2021/01/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>這是第一條Blog！在2021.01.17的晚上面世啦！<br>老規矩—— HELLO WORLD ✿✿ヽ(°▽°)ノ✿ (記錄下hexo指令功能)</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>以下的 More info link 都來自官方說明文檔</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line"><span class="comment"># or short form: hexo s</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line"><span class="comment"># or short form: hexo g</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="Lazy-Method"><a href="#Lazy-Method" class="headerlink" title="Lazy Method"></a>Lazy Method</h2><p>超級感謝能看到 <a href="https://cloud.tencent.com/developer/article/1609701">云游君: 教你如何从零开始搭建一个属于自己的网站</a> 的blog，仿照大神結尾處寫的腳本辦法，我也寫以下這個腳本用於部署到github上~</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="Bash-Command"><a href="#Bash-Command" class="headerlink" title="Bash Command"></a>Bash Command</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm=1</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$npm</span> -eq 1 ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Update the master!!&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Clean up!!&quot;</span></span><br><span class="line">    hexo clean</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Generate the file!!&quot;</span></span><br><span class="line">    hexo g</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Deploying...&quot;</span></span><br><span class="line">    hexo d</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;   &quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Do not update the master branch.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>上述代碼同樣存入 xxx.sh 腳本文件內，就可以用npm控制是否更新hexo分支時順便更新master(即顯示頁面的分支)！<br>其他詳情可以看看這個項目的 <a href="https://github.com/yyyyyyounger/yyyyyyounger.github.io/tree/hexo">GitHub頁</a> 的/hexo/update.sh</p><h2 id="腳本的運行"><a href="#腳本的運行" class="headerlink" title="腳本的運行"></a>腳本的運行</h2><p>沒錯，我一開始看大神用 sh update.sh 命令看傻了，CMD用不了這條命令，後來才知道sh命令是Linux的，Windows要想運行可以用Git Bash的命令行再使用bash命令。<br>但其實還有更方便的就是直接雙擊 xxx.sh 的圖標…</p><p>若是在VSCode內的Terminal操作，可以嘗試一下在目錄下直接輸入 xxx.sh 並Enter來運行。如果報錯不執行，可以在前面加上 .\ 強制運行？(或者說設為可信)</p><p>細緻的原理沒有深究，晚些時候再研究吧~</p>]]></content>
      
      
      <categories>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
